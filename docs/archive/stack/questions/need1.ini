Below is a complete, tagged ledger of your analytics/ stack—what exists vs what to add—plus the system packages you must provision. Each line states type, status, and purpose.

⸻

0) Provisioned systems (outside the repo)
	•	[REQUIRED SYSTEM] Container Registry — host versioned images for jobs and signals.
	•	[REQUIRED SYSTEM] Kubernetes (orchestration) — run CronJobs for batch and Deployment/Service for signals.
	•	[REQUIRED SYSTEM] Secrets Manager / K8s Secrets — store DSNs and auth keys.
	•	[REQUIRED SYSTEM] Postgres cluster — source + serving tables (customer_segments, product_signals, others you add).
	•	[REQUIRED SYSTEM] ClickHouse cluster — wide scans + affinity_edges.
	•	[REQUIRED SYSTEM] Observability (Prometheus + Grafana or cloud metrics) — scrape app/job metrics and alert.
	•	[REQUIRED SYSTEM] CI/CD runners (GitHub/GitLab) — build, test, docker build/push, deploy.
	•	[REQUIRED SYSTEM] ANN engine (OpenSearch k-NN / Milvus / FAISS-serving) — needed to meet #7 SLA (“ANN lookup ≤50 ms”) for neighbors.
	•	[REQUIRED SYSTEM] Optimizer runtime (OR-Tools / CBC / GLPK) — required by #4 knapsack and #9 markdown DP/MILP.

⸻

1) Repo: top-level analytics/ (what exists vs what to add)

A) analytics/common/
	•	[EXISTS • FILE] common/config/load.go — load YAML configs.
	•	[MISSING • EDIT] add strict key validation & env overrides — fail fast on missing DSNs/paths.
	•	[EXISTS • FILE] common/datastore/postgres.go — Postgres helpers.
	•	[MISSING • EDIT] add context timeouts, SelectFreshness, SelectCount, UpsertRows(id,model_version,as_of) — SLO checks + idempotent writes.
	•	[MISSING • EDIT] add readers for: returns, price history, search logs — needed by CLV, Elasticity, PLP.
	•	[EXISTS • FILE] common/datastore/clickhouse.go — ClickHouse helpers.
	•	[MISSING • EDIT] same helpers as Postgres (timeouts, freshness/count, upsert or batch insert).
	•	[EXISTS • FILE] common/timewin/window.go — rolling windows.
	•	[MISSING • EDIT] presets last_30d/90d/180d/365d + custom (start,end).

B) analytics/configs/
	•	[EXISTS • FILES] configs/*.yaml — per-job config (rfm, abcxyz, velocity, affinity).
	•	[MISSING • EDIT] ensure each has: inputs{store,dsn_env}, output{table,store,dsn_env}, window, model_version, job_slo{max_runtime,max_retries,backoff}.
	•	[EXISTS • FILE] configs/signals.yaml — serving map + SLOs.
	•	[MISSING • EDIT] ensure slo.freshness_hours/min_rows/timeouts_ms/paging & dataset→store bindings are complete.

C) analytics/jobs/ (batch compute)

Already scaffolded jobs
	•	[EXISTS • FOLDER] jobs/customer/rfm/ (cmd + pipeline + validate) — RFM segments.
	•	[EXISTS • FOLDER] jobs/product/velocity/ — velocity signals.
	•	[EXISTS • FOLDER] jobs/product/abcxyz/ — ABC/XYZ tags.
	•	[EXISTS • FOLDER] jobs/product/affinity/ — co-buy edges.
	•	[MISSING • EDIT in each job] respect job_slo context timeout/retries; log rows written, window, model_version; dedupe on (id,model_version,as_of).

Jobs you must add (one folder each; same pattern: cmd/main.go + pipeline/*.go + *_validate.go)
	•	[MISSING • FOLDER] jobs/customer/clv_bgnbd/ — fit hyperparameters + score CLV; persist tiers/clv.
	•	[MISSING • FOLDER] jobs/search/ranknet_train/ — train RankNet weights; persist rank_weights.
	•	[MISSING • FOLDER] jobs/campaign/promotion_uplift/ — per-user uplift + assignment export.
	•	[MISSING • FOLDER] jobs/cart/upsell_propensity/ — upsell decision scores.
	•	[MISSING • FOLDER] jobs/pdp/cross_sell/ — complements lists per hero.
	•	[MISSING • FOLDER] jobs/assortment/bundle_optimizer/ — pick slow-mover + hero bundles.
	•	[MISSING • FOLDER] jobs/pricing/markdown_optimizer/ — weekly ladder optimization.
	•	[MISSING • FOLDER] jobs/pricing/elasticity/ — estimate own-price elasticity outputs.
	•	[MISSING • FOLDER] jobs/customer/personas_hdbscan/ — persona labels.
	•	[MISSING • FOLDER] jobs/customer/churn_propensity/ — churn risk scores.
	•	[MISSING • FOLDER] jobs/customer/lifecycle_hsmm/ — lifecycle state + state_probs.
	•	[MISSING • FOLDER] jobs/product/similarity_index/ — build/load ANN index (vectors or normalized co-buy rows).

D) analytics/schemas/models/ (contracts)
	•	[EXISTS • FILE] customer_segments.schema.json — RFM/segments row shape.
	•	[EXISTS • FILE] product_signals.schema.json — velocity/ABCXYZ etc.
	•	[EXISTS • FILE] affinity_edges.schema.json — co-buy edges.
	•	Add new schemas (each includes id, model_version, as_of keys):
	•	[MISSING • FILE] tiers_clv.schema.json — CLV cents, tier, horizon.
	•	[MISSING • FILE] rank_weights.schema.json — feature weights, model meta.
	•	[MISSING • FILE] promotion_assignments.schema.json — user_id, arm, expected_delta_gm.
	•	[MISSING • FILE] upsell_scores.schema.json — hero, candidate, net_score.
	•	[MISSING • FILE] cross_sell.schema.json — hero item → top-N complements.
	•	[MISSING • FILE] bundles.schema.json — selected pairs and constraints snapshot.
	•	[MISSING • FILE] markdown_plans.schema.json — price ladder per week + totals.
	•	[MISSING • FILE] elasticity.schema.json — sku elasticity, confidence, bounds.
	•	[MISSING • FILE] personas.schema.json — persona_id, stability, features summary.
	•	[MISSING • FILE] churn_risk.schema.json — p_churn, decision_value.
	•	[MISSING • FILE] lifecycle_state.schema.json — state, time_in_state, state_probs.

E) analytics/signals/ (serving slice)

Entrypoint and wiring
	•	[EXISTS • FILE] signals/cmd/main.go — start serving.
	•	[MISSING • EDIT] apply default request timeouts; expose /healthz and /readyz; log bindings on boot.
	•	[EXISTS • FILE] signals/internal/store/factory.go — dataset→store.
	•	[MISSING • EDIT] boot checks: mapping→impl, DSN ping, freshness & row SLO checks; fail fast.

Models/services/validators/GraphQL already present
	•	[EXISTS • FOLDER] signals/internal/models/ — model structs.
	•	[EXISTS • FOLDER] signals/internal/services/ — service layer for datasets.
	•	[MISSING • EDIT] emit metrics: dataset_ok, rows, maxAgeHours; enforce paging limits via validators.
	•	[EXISTS • FOLDER] signals/internal/validators/ — request validation.
	•	[EXISTS • FOLDER] signals/internal/graph/schema/ — *signals.graphqls + resolvers.
	•	[MISSING • FILE] ops.graphqls — OpsStatus, opsStatus query.
	•	[MISSING • FILE] ops.resolver.go — assemble per-dataset status from factory + quick probes.
	•	[EXISTS • FOLDER] signals/proto/ — affinity_signals.proto, customer_signals.proto, product_signals.proto.
	•	[MISSING • FILES] proto/*.proto for new datasets you’ll serve (e.g., tiers_clv, bundles, cross_sell, churn_risk, lifecycle_state, rank_weights).

⸻

2) New infra/code scaffolding (repo)

Containerization
	•	[MISSING • FILE] analytics/signals/Dockerfile — build Go binary, expose ports.
	•	[MISSING • FILES] analytics/jobs//Dockerfile* — one per job (copy config path, run cmd).

K8s manifests
	•	[MISSING • FOLDER] deploy/k8s/services/
	•	[MISSING • FILE] signals-deployment.yaml — Deployment + readiness/liveness + env (DSNs).
	•	[MISSING • FILE] signals-service.yaml — Service/Ingress (GraphQL/gRPC).
	•	[MISSING • FOLDER] deploy/k8s/jobs/ — one CronJob per job (≈12).
	•	[MISSING • FILE] clv-cronjob.yaml — image, schedule, env, mounts.
	•	[MISSING • FILE] similarity-index-cronjob.yaml — build/load ANN index.
	•	*[MISSING • FILES] .yaml — promotion_uplift, upsell_propensity, cross_sell, bundle_optimizer, markdown_optimizer, elasticity, personas_hdbscan, churn_propensity, lifecycle_hsmm, ranknet_train, abcxyz, velocity, affinity, rfm.
	•	[MISSING • FOLDER] deploy/k8s/secrets/
	•	[MISSING • FILE] core-dsns.yaml — CORE_PG_DSN, CORE_CH_DSN.
	•	[MISSING • FILE] signals-dsns.yaml — SIGNALS_PG_DSN, SIGNALS_CH_DSN.

CI/CD + tooling
	•	[MISSING • FILE] .github/workflows/ci.yml — go build/test; docker build; push.
	•	[MISSING • FILE] .github/workflows/deploy.yml — kubectl/Helm/Terraform apply.
	•	[MISSING • FILE] Makefile — build, docker, deploy, test.
	•	[MISSING • FILE] docs/registry-policy.md — image names, tag rules (model:1.0.0), promotion.
	•	[MISSING • FILE] env/.env.example — DSN var names and expected formats.

Observability
	•	[MISSING • FILE] deploy/observability/prometheus-scrape.yaml — scrape signals and job pods.
	•	[MISSING • FILE] dashboards/analytics-ops.json — Grafana board: dataset_ok, rows, maxAgeHours, job rows, runtime.
	•	[MISSING • EDIT] instrument logs/metrics in jobs & signals — counters/gauges per safety.yaml.

⸻

3) Minimal per-model mapping (what new outputs you will serve)
	•	CLV (#1) → tiers_clv (Postgres): CLV_180_cents, tier.
	•	Recommender/PLP (#2/#8) → rank_weights (Postgres) if trained offline; scoring can be online.
	•	Basket/Cross-sell/Upsell (#3/#11/#12) → upsell_scores, cross_sell (Postgres).
	•	Promotion Uplift (#4) → promotion_assignments (Postgres).
	•	Personas (#5) → personas (Postgres).
	•	Affinities/Similarity (#6/#7) → existing tables + ANN index artifacts stored/loaded by job.
	•	Markdown/Elasticity/Bundle (#9/#10/#13) → markdown_plans, elasticity, bundles (Postgres).
	•	Churn/Lifecycle (#14/#15) → churn_risk, lifecycle_state (Postgres).

⸻

One-glance “what you already have” vs “what to add”
	•	Already have: common/*, configs/*, jobs for rfm/velocity/abcxyz/affinity, schemas/models (3 JSONs), signals models/services/validators/graph/proto scaffolds.
	•	Add now (code/config): Dockerfiles, K8s manifests, CI/CD, secrets, opsStatus GraphQL, boot/SLO checks in factory, metrics, new schemas/protos, missing job folders, ANN index job, optimizer hooks.
	•	Provision now (systems): Registry, Kubernetes, Secrets Manager, Postgres, ClickHouse, Observability stack, ANN engine, Optimizer runtime, CI runners.

This is everything needed—no “optional” gaps—to run all models end-to-end with your current architecture.