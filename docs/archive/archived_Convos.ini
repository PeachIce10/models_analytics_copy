Short answer: yes—everything you wrote is implementable without LLMs, and you can stand the whole system up and run it end-to-end with Infrastructure as Code (IaC). IaC won’t “do the math,” but it provisions, wires, deploys, schedules, and monitors all the services that run your (classic stats/ML) code.

Here’s the practical picture so you’re 100% sure:

What IaC handles
	•	Data & storage: buckets/DBs/warehouse tables; streams (Kafka/Kinesis/Pub/Sub); schemas & retention.
	•	Batch compute: scheduled jobs for training/scoring (Airflow/Composer/Step Functions/Prefect), Spark/Dataproc/EMR, or containerized Python jobs.
	•	Online serving: APIs behind a gateway+LB, autoscaling (K8s/EKS/GKE/AKS or Cloud Run/Lambda), feature cache (Redis), and ANN services (OpenSearch k-NN, FAISS/Milvus).
	•	Model assets: container registries, artifacts, versioned config.
	•	Ops: dashboards/alerts, logs/metrics, secrets, IAM.

What your app code handles (no LLM needed)
	•	The algorithms themselves: BG/NBD + Gamma-Gamma, RankNet, GBM/logit, HDBSCAN, Hawkes, markdown DP/MILP, cosine/PPMI, etc. (all standard libraries).
	•	A few special functions (e.g., hypergeometric in BG/NBD) via numeric libs—again, normal code.

Quick mapping (how you’ll deploy each with IaC)
	•	Batch models: #1, #4, #5, #6, #7 (clustering build), #9, #10, #13, #14, #15 (micro-batch)
Provision scheduled containers + warehouse tables + output sinks (feature tables, tiers, bundles, schedules).
	•	Online/near-real-time models: #2, #3, #8, #11, #12, #7 (ANN serving)
Provision API services + Redis feature cache + vector index (for #2/#7/#12) + health checks and autoscaling.

Typical stacks that fit your spec
	•	Terraform or Pulumi + Docker + Kubernetes (or serverless) for services;
	•	Airflow/Composer/Step Functions/Prefect for batch DAGs;
	•	OpenSearch k-NN / FAISS / Milvus for ANN;
	•	PostgreSQL/BigQuery/Redshift/Snowflake for aggregates;
	•	Prometheus/Grafana or CloudWatch/Stackdriver for SLOs;
	•	Feast (optional) for a simple feature store.

Bottom line: your assumption is sound. These are all conventional statistical/ML components that IaC can deploy and operate reliably—no generative AI or LLMs required. If you want, I can sketch a minimal Terraform module layout for one online model (say #2) and one batch model (say #1) so your team has a concrete starting blueprint.