Appendix Ledger — All 15 Models (goals, outputs, ops)

Legend — Activation: baseline (ship now), gated (ship when data criteria met), later (scheduled after baseline). Serve mode SLA p95 unless stated.

1. Customer CLV Tiers (BG/NBD + Gamma–Gamma)
  • Goal: 6–12 m margin forecast; VIP/High/Med/Low tiers
  • Outputs: customer.clvScore, customer.tier
  • Serve: batch weekly/daily; cache reads ≤10 ms
  • Activation: baseline
  • Prereqs: orders w/ margin fields; returns handled
  • KPIs: Spearman ρ ≥ 0.55; VIP targeting +8% net GM

2. Two‑Stage Recommender (PDP/PLP)
  • Goal: conversion & net GM lift under stock/exposure
  • Outputs: ordered product IDs for PDP/PLP
  • Serve: hybrid; 120–200 ms; freshness ≤120 s
  • Activation: baseline
  • Prereqs: interactions, embeddings, price/stock
  • KPIs: +5% conv vs popularity; GM/order ↑

3. Basket / Session‑Aware Re‑rank (Cart)
  • Goal: increase attach‑rate without harming base conversion
  • Outputs: cart.upsellSuggestions[]
  • Serve: online; ≤120 ms; freshness ≤120 s
  • Activation: baseline
  • Prereqs: co‑buy graph, compatibility flags, margins
  • KPIs: attach‑rate ≥ +10%; cannibalization Δ ≤ +1%

4. Promotion Uplift (multi‑treatment, cost‑aware)
  • Goal: maximize incremental GM under budget/caps; suppress negative uplift
  • Outputs: (customer → treatment|NO_OFFER|control)
  • Serve: batch per campaign (hours ok)
  • Activation: baseline
  • Prereqs: persistent holdouts; treatment logs
  • KPIs: Incremental GM/1k ≥ +12%; AUUC/Qini > 0

5. Customer Personas (HDBSCAN; K‑Means fallback)
  • Goal: behavioral segments for messaging/merch
  • Outputs: customer.persona
  • Serve: batch weekly
  • Activation: baseline
  • Prereqs: RFMT/E + category shares
  • KPIs: silhouette/stability; persona CTR lift

6. Customer Affinities (brand/category)
  • Goal: top‑K targeting/slotting tags
  • Outputs: customer.affinities[]
  • Serve: batch daily; TTL 1 d
  • Activation: baseline
  • Prereqs: event sequences; half‑life decay
  • KPIs: hit‑rate@K vs future views ≥ target

7. Product Assortment Similarity / Clustering
  • Goal: neighbors & clusters for discovery/bundling
  • Outputs: product.similar[], products.cluster_id
  • Serve: ANN lookup ≤50 ms; embeddings weekly
  • Activation: baseline
  • Prereqs: co‑buy/co‑view graph or attributes
  • KPIs: neighbor precision@K; PDP CTR lift

8. PLP/Search Ranking (LTR)
  • Goal: nDCG@K / conversion under freshness guards
  • Outputs: ranked product list
  • Serve: online ≤100 ms; fallback to lexical if stale
  • Activation: baseline
  • Prereqs: search logs, BM25/ANN features
  • KPIs: nDCG@K ↑; zero‑result rate stable

9. Markdown Optimizer (stochastic DP/MILP)
  • Goal: maximize terminal GM & sell‑through by deadline
  • Outputs: product.markdown_schedule[]
  • Serve: batch daily/weekly
  • Activation: baseline
  • Prereqs: demand forecast quantiles; ladder
  • KPIs: terminal GM ↑ vs static; sell‑through ↑

10. Price Elasticity (log‑log; Lerner) — gated
  • Goal: base price planning (not markdown/promo)
  • Outputs: product.priceElasticity, suggested price (bounded)
  • Serve: batch weekly
  • Activation: gated (≥5 price points/SKU & control)
  • Prereqs: price/units history; promo/seasonality controls
  • KPIs: price test revenue/margin ↑; guardrails held

11. Upsell Propensity (profit‑guarded)
  • Goal: profitable upsell offers with CVR guard
  • Outputs: cart.upsellSuggestions[] (shared surface)
  • Serve: online ≤100 ms
  • Activation: baseline
  • Prereqs: upsell catalog; show/accept logs
  • KPIs: take‑rate ↑; base CVR unchanged; GM/order ↑

12. Cross‑sell (graph embeddings)
  • Goal: profitable complements; avoid substitutes/low stock
  • Outputs: product.crossSell[]
  • Serve: hybrid ≤120 ms
  • Activation: baseline
  • Prereqs: product graph; margins; stock cover
  • KPIs: attach‑rate ↑; cannibalization controlled

13. Bundle Optimizer (slow‑mover + hero)
  • Goal: move slow‑movers with hero while keeping hero GM
  • Outputs: discounts.bundle_definitions[]
  • Serve: batch daily/weekly
  • Activation: baseline
  • Prereqs: attach priors; cannibalization priors; stock
  • KPIs: slow‑mover sell‑through ↑; hero GM floor held

14. Churn Propensity (risk scoring)
  • Goal: treat at‑risk customers when net positive
  • Outputs: users.churn_risk
  • Serve: batch weekly; triggers ≤120 s
  • Activation: later
  • Prereqs: labeled churn horizon; RFMT/E; cohort flags
  • KPIs: retained GM uplift > 0; CPA within bound

15. Lifecycle Timing (HSMM; Hawkes optional)
  • Goal: trigger win‑backs at At‑Risk transitions
  • Outputs: users.lifecycle_state, users.state_probs[]
  • Serve: daily micro‑batch; triggers ≤120 s
  • Activation: later
  • Prereqs: weekly sequences of visits/opens/purchases
  • KPIs: win‑back rate ↑; time‑to‑reactivation ↓




	1.	Predicts each customer’s six-month profit and tiers them (VIP/High/Med/Low) to guide promos and VIP treatment.
	2.	Ranks products to show the most profitable, in-stock items first on pages like PDP and PLP.
	3.	Suggests cart add-ons only when they raise profit without hurting checkout completion.
	4.	Picks the best offer (or no offer) per customer to maximize incremental profit within campaign budgets.
	5.	Groups customers into clear personas so messaging and merchandising can be tailored.
	6.	Scores each customer’s brand and category preferences to target and surface what they care about first.
	7.	Finds similar products and clusters to power “you may also like” and discovery experiences.
	8.	Orders search and listing results to show the most relevant, high-performing items first.
	9.	Plans weekly price markdowns to clear inventory on time while maximizing total profit.
	10.	Learns how demand changes with price and recommends a sound base price within guardrails.
	11.	Decides when to show an upsell so average order profit goes up without lowering conversion.
	12.	Recommends complementary products for a hero item while avoiding substitutes and low stock.
	13.	Builds bundles that pair slow movers with hero items to boost sell-through without hurting hero margins.
	14.	Flags customers at risk of leaving and triggers cost-effective retention actions.
	15.	Detects when customers shift from active to at-risk or lapsed so win-back outreach happens at the right time.



  1.	Predicts each customer’s profit over the next six months and assigns VIP/High/Med/Low tiers. It does this by looking at how often they buy and how much margin they usually generate to forecast future value.
	2.	Decides which products to show first on product and category pages to lift profit. It pulls a shortlist from browsing and buying signals and then ranks items by expected margin while honoring stock and diversity limits.
	3.	Suggests add-ons in the cart only when they’re likely to raise profit without hurting checkout. It estimates the extra margin from each add-on and weighs it against any risk of distracting the shopper.
	4.	Chooses the best offer for each customer to maximize incremental profit within a campaign budget. It predicts the lift from each offer and allocates offers where they pay off the most under caps.
	5.	Groups customers into clear personas for messaging and merchandising. It finds natural clusters in behavior and keeps the stable, well-separated ones.
	6.	Scores each customer’s brand and category preferences for targeting and first-slot placement. It counts recent interactions with a time decay and smooths sparse data to produce reliable top tags.
	7.	Finds similar products and product clusters to power “you may also like” and discovery. It learns which items are bought together and uses that pattern to surface neighbors and build groups.
	8.	Orders search and listing results so the most relevant, high-performing items appear first. It learns from past clicks and purchases and blends in freshness, price, stock, and promotions.
	9.	Plans weekly price markdowns to clear inventory by a deadline while maximizing total profit. It balances expected demand at each price with remaining stock and salvage value to pick the best ladder.
	10.	Estimates how demand responds to price and suggests a sensible base price within guardrails. It fits a simple relationship between price and units sold and simulates outcomes before recommending.
	11.	Decides when to show an upsell so profit per order rises without lowering conversion. It predicts acceptance and subtracts any expected dip in the base purchase before green-lighting the offer.
	12.	Recommends complementary products for the item in the cart or on the page. It uses product relationships and filters out substitutes and low-stock picks, then ranks by expected profit.
	13.	Builds bundles that pair slow movers with hero items to boost sell-through without hurting hero margins. It scores each pairing by extra profit after cannibalization and picks the best set under constraints.
	14.	Flags customers at risk of leaving and only treats them when it’s expected to pay off. It compares the value of saving the customer to the cost of the action and prioritizes the winners.
	15.	Detects when customers shift from active to at-risk to lapsed so win-backs land at the right time. It reads recent activity patterns to update the current state and trigger outreach.